15:06:18: Creating resource group General
15:06:18: Creating resource group Internal
15:06:18: Creating resource group Autodetect
15:06:18: SceneManagerFactory for type 'DefaultSceneManager' registered.
15:06:18: Registering ResourceManager for type Material
15:06:18: Registering ResourceManager for type Mesh
15:06:18: Registering ResourceManager for type Skeleton
15:06:18: MovableObjectFactory for type 'ParticleSystem' registered.
15:06:18: OverlayElementFactory for type Panel registered.
15:06:18: OverlayElementFactory for type BorderPanel registered.
15:06:18: OverlayElementFactory for type TextArea registered.
15:06:18: Registering ResourceManager for type Font
15:06:18: ArchiveFactory for archive type FileSystem registered.
15:06:18: ArchiveFactory for archive type Zip registered.
15:06:18: ArchiveFactory for archive type EmbeddedZip registered.
15:06:18: DDS codec registering
15:06:18: FreeImage version: 3.15.3
15:06:18: This program uses FreeImage, a free, open source image library supporting all common bitmap formats. See http://freeimage.sourceforge.net for details
15:06:18: Supported formats: bmp,ico,jpg,jif,jpeg,jpe,jng,koa,iff,lbm,mng,pbm,pbm,pcd,pcx,pgm,pgm,png,ppm,ppm,ras,tga,targa,tif,tiff,wap,wbmp,wbm,psd,cut,xbm,xpm,gif,hdr,g3,sgi,exr,j2k,j2c,jp2,pfm,pct,pict,pic,3fr,arw,bay,bmq,cap,cine,cr2,crw,cs1,dc2,dcr,drf,dsc,dng,erf,fff,ia,iiq,k25,kc2,kdc,mdc,mef,mos,mrw,nef,nrw,orf,pef,ptx,pxn,qtk,raf,raw,rdc,rw2,rwl,rwz,sr2,srf,srw,sti
15:06:18: Registering ResourceManager for type HighLevelGpuProgram
15:06:18: Registering ResourceManager for type Compositor
15:06:18: MovableObjectFactory for type 'Entity' registered.
15:06:18: MovableObjectFactory for type 'Light' registered.
15:06:18: MovableObjectFactory for type 'BillboardSet' registered.
15:06:18: MovableObjectFactory for type 'ManualObject' registered.
15:06:18: MovableObjectFactory for type 'BillboardChain' registered.
15:06:18: MovableObjectFactory for type 'RibbonTrail' registered.
15:06:18: *-*-* OGRE Initialising
15:06:18: *-*-* Version 1.8.1 (Byatis)
15:06:18: Loading library RenderSystem_GL_d
15:06:18: Installing plugin: GL RenderSystem
15:06:18: OpenGL Rendering Subsystem created.
15:06:18: Plugin successfully installed
15:06:18: CPU Identifier & Features
15:06:18: -------------------------
15:06:18:  *   CPU ID: GenuineIntel: Genuine Intel(R) CPU           U7300  @ 1.30GHz
15:06:18:  *      SSE: yes
15:06:18:  *     SSE2: yes
15:06:18:  *     SSE3: yes
15:06:18:  *      MMX: yes
15:06:18:  *   MMXEXT: yes
15:06:18:  *    3DNOW: no
15:06:18:  * 3DNOWEXT: no
15:06:18:  *     CMOV: yes
15:06:18:  *      TSC: yes
15:06:18:  *      FPU: yes
15:06:18:  *      PRO: yes
15:06:18:  *       HT: no
15:06:18: -------------------------
15:06:18: *** Starting Win32GL Subsystem ***
15:06:18: Registering ResourceManager for type Texture
15:06:18: GLRenderSystem::_createRenderWindow "LowLevelOgre Render Window", 800x600 windowed  miscParams: FSAA=0 FSAAHint= colourDepth=32 displayFrequency=0 gamma=false vsync=false vsyncInterval=1 
15:06:18: Created Win32Window 'LowLevelOgre Render Window' : 818x645, 32bpp
15:06:18: GL_VERSION = 3.3.0
15:06:18: GL_VENDOR = NVIDIA Corporation
15:06:19: GL_RENDERER = GeForce GT 335M/PCI/SSE2
15:06:19: GL_EXTENSIONS = GL_ARB_blend_func_extended GL_ARB_color_buffer_float GL_ARB_compatibility GL_ARB_copy_buffer GL_ARB_depth_buffer_float GL_ARB_depth_clamp GL_ARB_depth_texture GL_ARB_draw_buffers GL_ARB_draw_buffers_blend GL_ARB_draw_elements_base_vertex GL_ARB_draw_instanced GL_ARB_ES2_compatibility GL_ARB_explicit_attrib_location GL_ARB_fragment_coord_conventions GL_ARB_fragment_program GL_ARB_fragment_program_shadow GL_ARB_fragment_shader GL_ARB_framebuffer_object GL_ARB_framebuffer_sRGB GL_ARB_geometry_shader4 GL_ARB_get_program_binary GL_ARB_half_float_pixel GL_ARB_half_float_vertex GL_ARB_imaging GL_ARB_instanced_arrays GL_ARB_map_buffer_range GL_ARB_multisample GL_ARB_multitexture GL_ARB_occlusion_query GL_ARB_occlusion_query2 GL_ARB_pixel_buffer_object GL_ARB_point_parameters GL_ARB_point_sprite GL_ARB_provoking_vertex GL_ARB_robustness GL_ARB_sample_shading GL_ARB_sampler_objects GL_ARB_seamless_cube_map GL_ARB_separate_shader_objects GL_ARB_shader_bit_encoding GL_ARB_shader_objects GL_ARB_shading_language_100 GL_ARB_shadow GL_ARB_sync GL_ARB_texture_border_clamp GL_ARB_texture_buffer_object GL_ARB_texture_compression GL_ARB_texture_compression_rgtc GL_ARB_texture_cube_map GL_ARB_texture_cube_map_array GL_ARB_texture_env_add GL_ARB_texture_env_combine GL_ARB_texture_env_crossbar GL_ARB_texture_env_dot3 GL_ARB_texture_float GL_ARB_texture_gather GL_ARB_texture_mirrored_repeat GL_ARB_texture_multisample GL_ARB_texture_non_power_of_two GL_ARB_texture_query_lod GL_ARB_texture_rectangle GL_ARB_texture_rg GL_ARB_texture_rgb10_a2ui GL_ARB_texture_swizzle GL_ARB_timer_query GL_ARB_transform_feedback2 GL_ARB_transpose_matrix GL_ARB_uniform_buffer_object GL_ARB_vertex_array_bgra GL_ARB_vertex_array_object GL_ARB_vertex_buffer_object GL_ARB_vertex_program GL_ARB_vertex_shader GL_ARB_vertex_type_2_10_10_10_rev GL_ARB_viewport_array GL_ARB_window_pos GL_ATI_draw_buffers GL_ATI_texture_float GL_ATI_texture_mirror_once GL_S3_s3tc GL_EXT_texture_env_add GL_EXT_abgr GL_EXT_bgra GL_EXT_bindable_uniform GL_EXT_blend_color GL_EXT_blend_equation_separate GL_EXT_blend_func_separate GL_EXT_blend_minmax GL_EXT_blend_subtract GL_EXT_compiled_vertex_array GL_EXT_Cg_shader GL_EXT_depth_bounds_test GL_EXT_direct_state_access GL_EXT_draw_buffers2 GL_EXT_draw_instanced GL_EXT_draw_range_elements GL_EXT_fog_coord GL_EXT_framebuffer_blit GL_EXT_framebuffer_multisample GL_EXTX_framebuffer_mixed_formats GL_EXT_framebuffer_object GL_EXT_framebuffer_sRGB GL_EXT_geometry_shader4 GL_EXT_gpu_program_parameters GL_EXT_gpu_shader4 GL_EXT_multi_draw_arrays GL_EXT_packed_depth_stencil GL_EXT_packed_float GL_EXT_packed_pixels GL_EXT_pixel_buffer_object GL_EXT_point_parameters GL_EXT_provoking_vertex GL_EXT_rescale_normal GL_EXT_secondary_color GL_EXT_separate_shader_objects GL_EXT_separate_specular_color GL_EXT_shadow_funcs GL_EXT_stencil_two_side GL_EXT_stencil_wrap GL_EXT_texture3D GL_EXT_texture_array GL_EXT_texture_buffer_object GL_EXT_texture_compression_latc GL_EXT_texture_compression_rgtc GL_EXT_texture_compression_s3tc GL_EXT_texture_cube_map GL_EXT_texture_edge_clamp GL_EXT_texture_env_combine GL_EXT_texture_env_dot3 GL_EXT_texture_filter_anisotropic GL_EXT_texture_integer GL_EXT_texture_lod GL_EXT_texture_lod_bias GL_EXT_texture_mirror_clamp GL_EXT_texture_object GL_EXT_texture_shared_exponent GL_EXT_texture_sRGB GL_EXT_texture_swizzle GL_EXT_timer_query GL_EXT_transform_feedback2 GL_EXT_vertex_array GL_EXT_vertex_array_bgra GL_IBM_rasterpos_clip GL_IBM_texture_mirrored_repeat GL_KTX_buffer_region GL_NV_blend_square GL_NV_conditional_render GL_NV_copy_depth_to_color GL_NV_copy_image GL_NV_depth_buffer_float GL_NV_depth_clamp GL_NV_explicit_multisample GL_NV_fence GL_NV_float_buffer GL_NV_fog_distance GL_NV_fragment_program GL_NV_fragment_program_option GL_NV_fragment_program2 GL_NV_framebuffer_multisample_coverage GL_NV_geometry_shader4 GL_NV_gpu_program4 GL_NV_gpu_program4_1 GL_NV_half_float GL_NV_light_max_exponent GL_NV_multisample_coverage GL_NV_multisample_filter_hint GL_NV_occlusion_query GL_NV_packed_depth_stencil GL_NV_parameter_buffer_object GL_NV_parameter_buffer_object2 GL_NV_pixel_data_range GL_NV_point_sprite GL_NV_primitive_restart GL_NV_register_combiners GL_NV_register_combiners2 GL_NV_shader_buffer_load GL_NV_texgen_reflection GL_NV_texture_barrier GL_NV_texture_compression_vtc GL_NV_texture_env_combine4 GL_NV_texture_expand_normal GL_NV_texture_multisample GL_NV_texture_rectangle GL_NV_texture_shader GL_NV_texture_shader2 GL_NV_texture_shader3 GL_NV_transform_feedback GL_NV_transform_feedback2 GL_NV_vertex_array_range GL_NV_vertex_array_range2 GL_NV_vertex_buffer_unified_memory GL_NV_vertex_program GL_NV_vertex_program1_1 GL_NV_vertex_program2 GL_NV_vertex_program2_option GL_NV_vertex_program3 GL_NVX_conditional_render GL_NVX_gpu_memory_info GL_SGIS_generate_mipmap GL_SGIS_texture_lod GL_SGIX_depth_texture GL_SGIX_shadow GL_SUN_slice_accum GL_WIN_swap_hint WGL_EXT_swap_control 
15:06:19: Supported WGL extensions: WGL_ARB_buffer_region WGL_ARB_create_context WGL_ARB_create_context_profile WGL_ARB_create_context_robustness WGL_ARB_extensions_string WGL_ARB_make_current_read WGL_ARB_multisample WGL_ARB_pbuffer WGL_ARB_pixel_format WGL_ARB_pixel_format_float WGL_ARB_render_texture WGL_ATI_pixel_format_float WGL_EXT_create_context_es2_profile WGL_EXT_extensions_string WGL_EXT_framebuffer_sRGB WGL_EXT_pixel_format_packed_float WGL_EXT_swap_control WGL_NVX_DX_interop WGL_NV_float_buffer WGL_NV_multisample_coverage WGL_NV_render_depth_texture WGL_NV_render_texture_rectangle 
15:06:19: ***************************
15:06:19: *** GL Renderer Started ***
15:06:19: ***************************
15:06:19: Registering ResourceManager for type GpuProgram
15:06:19: GLSL support detected
15:06:19: GL: Using GL_EXT_framebuffer_object for rendering to textures (best)
15:06:19: FBO PF_UNKNOWN depth/stencil support: D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_L8 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_A8 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_A4L4 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_BYTE_LA depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_R5G6B5 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_B5G6R5 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_A1R5G5B5 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_R8G8B8 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_B8G8R8 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_A8R8G8B8 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_B8G8R8A8 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_A2R10G10B10 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_A2B10G10R10 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_FLOAT16_RGB depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_FLOAT16_RGBA depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_FLOAT32_RGB depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_FLOAT32_RGBA depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_X8R8G8B8 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_X8B8G8R8 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_SHORT_RGBA depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_R3G3B2 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_FLOAT16_R depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_FLOAT32_R depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:19: FBO PF_FLOAT16_GR depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:20: FBO PF_FLOAT32_GR depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:20: FBO PF_SHORT_RGB depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
15:06:20: [GL] : Valid FBO targets PF_UNKNOWN PF_L8 PF_A8 PF_A4L4 PF_BYTE_LA PF_R5G6B5 PF_B5G6R5 PF_A1R5G5B5 PF_R8G8B8 PF_B8G8R8 PF_A8R8G8B8 PF_B8G8R8A8 PF_A2R10G10B10 PF_A2B10G10R10 PF_FLOAT16_RGB PF_FLOAT16_RGBA PF_FLOAT32_RGB PF_FLOAT32_RGBA PF_X8R8G8B8 PF_X8B8G8R8 PF_SHORT_RGBA PF_R3G3B2 PF_FLOAT16_R PF_FLOAT32_R PF_FLOAT16_GR PF_FLOAT32_GR PF_SHORT_RGB 
15:06:20: RenderSystem capabilities
15:06:20: -------------------------
15:06:20: RenderSystem Name: OpenGL Rendering Subsystem
15:06:20: GPU Vendor: nvidia
15:06:20: Device Name: GeForce GT 335M/PCI/SSE2
15:06:20: Driver Version: 3.3.0.0
15:06:20:  * Fixed function pipeline: yes
15:06:20:  * Hardware generation of mipmaps: yes
15:06:20:  * Texture blending: yes
15:06:20:  * Anisotropic texture filtering: yes
15:06:20:  * Dot product texture operation: yes
15:06:20:  * Cube mapping: yes
15:06:20:  * Hardware stencil buffer: yes
15:06:20:    - Stencil depth: 8
15:06:20:    - Two sided stencil support: yes
15:06:20:    - Wrap stencil values: yes
15:06:20:  * Hardware vertex / index buffers: yes
15:06:20:  * Vertex programs: yes
15:06:20:  * Number of floating-point constants for vertex programs: 1024
15:06:20:  * Number of integer constants for vertex programs: 0
15:06:20:  * Number of boolean constants for vertex programs: 0
15:06:20:  * Fragment programs: yes
15:06:20:  * Number of floating-point constants for fragment programs: 512
15:06:20:  * Number of integer constants for fragment programs: 0
15:06:20:  * Number of boolean constants for fragment programs: 0
15:06:20:  * Geometry programs: yes
15:06:20:  * Number of floating-point constants for geometry programs: 2048
15:06:20:  * Number of integer constants for geometry programs: 0
15:06:20:  * Number of boolean constants for geometry programs: 0
15:06:20:  * Supported Shader Profiles: arbfp1 arbvp1 fp20 fp30 fp40 glsl gp4fp gp4gp gp4vp gpu_fp gpu_gp gpu_vp nvgp4 vp30 vp40
15:06:20:  * Texture Compression: yes
15:06:20:    - DXT: yes
15:06:20:    - VTC: yes
15:06:20:    - PVRTC: no
15:06:20:  * Scissor Rectangle: yes
15:06:20:  * Hardware Occlusion Query: yes
15:06:20:  * User clip planes: yes
15:06:20:  * VET_UBYTE4 vertex element type: yes
15:06:20:  * Infinite far plane projection: yes
15:06:20:  * Hardware render-to-texture: yes
15:06:20:  * Floating point textures: yes
15:06:20:  * Non-power-of-two textures: yes
15:06:20:  * Volume textures: yes
15:06:20:  * Multiple Render Targets: 8
15:06:20:    - With different bit depths: yes
15:06:20:  * Point Sprites: yes
15:06:20:  * Extended point parameters: yes
15:06:20:  * Max Point Size: 63.375
15:06:20:  * Vertex texture fetch: yes
15:06:20:  * Number of world matrices: 0
15:06:20:  * Number of texture units: 32
15:06:20:  * Stencil buffer depth: 8
15:06:20:  * Number of vertex blend matrices: 0
15:06:20:    - Max vertex textures: 32
15:06:20:    - Vertex textures shared: yes
15:06:20:  * Render to Vertex Buffer : yes
15:06:20:  * GL 1.5 without VBO workaround: no
15:06:20:  * Frame Buffer objects: yes
15:06:20:  * Frame Buffer objects (ARB extension): no
15:06:20:  * Frame Buffer objects (ATI extension): no
15:06:20:  * PBuffer support: yes
15:06:20:  * GL 1.5 without HW-occlusion workaround: no
15:06:20:  * Separate shader objects: no
15:06:20: DefaultWorkQueue('Root') initialising on thread 004DBB10.
15:06:20: Particle Renderer Type 'billboard' registered
15:06:20: DefaultWorkQueue('Root')::WorkerFunc - thread 03A6F068 starting.
15:06:20: DefaultWorkQueue('Root')::WorkerFunc - thread 00518500 starting.
